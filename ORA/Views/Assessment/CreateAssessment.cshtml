@model ORA.Models.AssessmentVM

@{
    ViewBag.Title = "CreateAssessment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
  $( function() {
    $( document ).tooltip();
  } );
</script>
<style>
    label {
        display: inline-block;
    }
</style>

<h2>CreateAssessment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AssessmentVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TDProblemSolving, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TD_Problem_Solving" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TDProblemSolving, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TDProblemSolving, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TDProblemSolving, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TDQualityOfWork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TD_Quality_of_Work" && info.Number == item)
                        {
                        <div class="radio-inline" title="@info.Name: @info.Desc">
                            <label>
                                @Html.RadioButtonFor(model => model.TDQualityOfWork, item, new { @class = "radio" })
                                @item
                            </label>
                        </div>
                    }
                }
            }
                @*@Html.EditorFor(model => model.TDQualityOfWork, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TDQualityOfWork, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TDProductivity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TD_Productivity" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TDProductivity, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TDProductivity, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TDProductivity, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TDProductKnowledge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TD_Product_Knowledge" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TDProductKnowledge, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TDProductKnowledge, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TDProductKnowledge, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TDComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TDComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TDComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSRProfesionalismTeamwork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "CSR_Professionalism_Teamwork" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.CSRProfesionalismTeamwork, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.CSRProffesionalismTeamwork, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.CSRProffesionalismTeamwork, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSRVerbalSkills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "CSR_Verbal_Skills" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.CSRVerbalSkills, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.CSRVerbalSkills, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.CSRVerbalSkills, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSRWrittenSkills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "CSR_Written_Skills" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.CSRWrittenSkills, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.CSRWrittenSkills, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.CSRWrittenSkills, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSRListeningSkills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "CSR_Listening_Skills" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.CSRListeningSkills, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.CSRListeningSkills, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.CSRListeningSkills, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSRComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CSRComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSRComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ADAttendence, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "AD_Attendence" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.ADAttendence, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.ADAttendence, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.ADAttendence, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ADEthicalBehavior, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "AD_Ethical_Behavior" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.ADEthicalBehavior, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.ADEthicalBehavior, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.ADEthicalBehavior, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ADMeetDeadlines, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "AD_Meet_Deadlines" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.ADMeetDeadlines, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.ADMeetDeadlines, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.ADMeetDeadlines, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ADOrganizeDetailedWork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "AD_Organize_Detailed_Work" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.ADOrganizeDetailedWork, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.ADOrganizeDetailedWork, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.ADOrganizeDetailedWork, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ADComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ADComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ADComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TMResourceUse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TM_Resource_Use" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TMResourceUse, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TMResourceUse, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TMResourceUse, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TMFeedback, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TM_Feedback" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TMFeedback, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TMFeedback, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TMFeedback, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TMTechnicalMonitoring, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TM_Technical_Monitoring" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TMTechnicalMonitoring, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TMTechnicalMonitoring, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TMTechnicalMonitoring, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TMAskingQuestions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "TM_Asking_Questions" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.TMAskingQuestions, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.TMAskingQuestions, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.TMAskingQuestions, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TMComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TMComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TMComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MIAttitudeWork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "MI_Attitude_Work" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.MIAttitudeWork, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.MIAttitudeWork, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.MIAttitudeWork, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MIGroomingAppearance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "MI_Grooming_Appearance" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.MIGroomingAppearance, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.MIGroomingAppearance, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.MIGroomingAppearance, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MIPersonalGrowth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "MI_Personal_Growth" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.MIPersonalGrowth, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.MIPersonalGrowth, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.MIPersonalGrowth, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MIPotentialAdvancement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Points)
                {
                    foreach (var info in Model.Descriptions)
                    {
                        if (info.AssessName == "MI_Potential_Advancement" && info.Number == item)
                        {
                            <div class="radio-inline" title="@info.Name: @info.Desc">
                                <label>
                                    @Html.RadioButtonFor(model => model.MIPotentialAdvancement, item, new { @class = "radio" })
                                    @item
                                </label>
                            </div>
                        }
                    }
                }
                @*@Html.EditorFor(model => model.MIPotentialAdvancement, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.MIPotentialAdvancement, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MIComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MIComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MIComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmployeeID, new SelectList(Model.EmployeeList, "EmployeeId", "EmployeeName"), "Select Employee")
                @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
