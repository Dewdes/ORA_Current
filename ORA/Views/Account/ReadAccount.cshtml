@model ORA.Models.EmployeeVM

@{
    ViewBag.Title = "ReadAccount";
    Layout = null;
}
<style>
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <link rel="icon" type="image/png" href="~/Content/assets/img/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport'/>
    <meta name="viewport" content="width=device-width"/>

    <!-- Bootstrap core CSS -->
    <link href="~/Content/assets/css/bootstrap.min.css" rel="stylesheet"/>
    <!-- Animation library for notifications -->
    <link href="~/Content/assets/css/animate.min.css" rel="stylesheet"/>
    <!-- Light Bootstrap Table core CSS -->
    <link href="~/Content/assets/css/light-bootstrap-dashboard.css" rel="stylesheet"/>

    <!-- CSS for Demo Purpose, don't include it in your project -->
    <link href="~/Content/assets/css/demo.css" rel="stylesheet"/>

    <!-- Fonts and icons -->
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>
    <link href="~/Content/assets/css/pe-icon-7-stroke.css" rel="stylesheet"/>
</head>
<body>
<div class="wrapper">
<div class="sidebar" data-color="green" data-image="assets/img/sidebar-5.jpg">
    <!-- you can change the color of the sidebar using: data-color="blue | azure | green | orange | red | purple" -->

    <div class="sidebar-wrapper">
        <ul class="nav">
            <li class="active">
                <i class="pe-7s-user"></i>
                <p>User Profile</p>
            </li>
            <li>
                <i class="pe-7s-note2"></i>
                @Html.ActionLink("My Assessments", "ReadMyAssessments", "Assessment", new {id = Model.EmployeeId}, new {})
            </li>
            <li>
                <i class="pe-7s-bookmarks"></i>
                @Html.ActionLink("My KPI's", "ReadMyKPIs", "KPI", new {id = Model.EmployeeId}, new {})
            </li>

            @if ((string) Session["Role"] == "Team Lead")
            {
                <li>
                    <i class="pe-7s-note2"></i>
                    @Html.ActionLink("Team Assessments", "ReadAssessments", "Assessment", new {id = Model.EmployeeId}, new {})
                </li>
                <li>
                    <i class="pe-7s-note2"></i>
                    @Html.ActionLink("Team KPI's", "ReadKPIs", "KPI", new {id = Model.EmployeeId}, new {})
                </li>

            }
            <li>
                <i class="pe-7s-note2"></i>
                @Html.ActionLink("My Resume", "ReadResumeById", "Resume")
            </li>
            <li>
                <a href="#">
                    <i class="pe-7s-news-paper"></i>
                    <p>My Resources</p>
                </a>
            </li>
            <li>
                <i class="pe-7s-news-paper"></i>
                @Html.ActionLink("News Feed", "Index", "Home")
            </li>
        </ul>
    </div>
</div>
<div class="main-panel">
<nav class="navbar navbar-default navbar-fixed">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @if ((string) Session["Role"] == "Manager")
            {
                <a class="navbar-brand" href="#">MANAGER DASHBOARD</a>
            }
            @if ((string) Session["Role"] == "Team Lead")
            {
                <a class="navbar-brand" href="#">TEAM LEAD DASHBOARD</a>
            }
            <a class="navbar-brand" href="#">Profile</a>

        </div>
        <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav navbar-left"></ul>
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <a href="">
                        Account
                    </a>
                </li>
                @if ((string) Session["Role"] == "Manager" || (string) Session["Role"] == "Team Lead")
                {
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                            @Session["Role"] Tools
                            <b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Create Assessment", "CreateAssessment", "Assessment")</li>
                            <li>@Html.ActionLink("Create KPI", "CreateKPI", "KPI")</li>
                            <li>@Html.ActionLink("View Employees", "ViewEmployees", "Employee")</li>
                            <li><a href="#">Another action</a></li>
                            <li><a href="#">Something</a></li>
                            <li class="divider"></li>
                            <li><a href="#">Separated link</a></li>
                        </ul>
                    </li>
                }

                <li>
                    @Html.ActionLink("Log Out", "LogOut", "Login")
                </li>
            </ul>
        </div>
    </div>
</nav>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="header">
                            <h4 class="title">Edit Profile</h4>
                        </div>
                        <div class="content">
                            <form>
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <label>Company (disabled)</label>
                                            <input type="text" class="form-control" disabled placeholder="Company" value="Onshore Outsourcing">
                                        </div>
                                    </div>
                                    @*<div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Username</label>
                                                            <input type="text" class="form-control" disabled placeholder="Username" value="michael23">
                                                        </div>
                                                    </div>*@
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address.Email)
                                            <br/>
                                            @Html.DisplayTextFor(model => model.Address.Email)
                                        </div>
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.EmployeeId)
                                @Html.HiddenFor(model => model.EmployeeNumber)
                                @Html.HiddenFor(model => model.Age)
                                @Html.HiddenFor(model => model.BirthDate)
                                @Html.HiddenFor(model => model.TeamId)
                                @Html.HiddenFor(model => model.RoleId)
                                @Html.HiddenFor(model => model.AssignmentId)
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmployeeFirstName)
                                            @Html.EditorFor(model => model.EmployeeFirstName, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "First Name", required = "required"}})
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmployeeMiddle)
                                            @Html.EditorFor(model => model.EmployeeMiddle, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Middle Name/Initial", required = "required"}})
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmployeeLastName)
                                            @Html.EditorFor(model => model.EmployeeLastName, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Last Name", required = "required"}})
                                        </div>
                                    </div>
                                </div>

                                @Html.HiddenFor(model => model.Address.Email)
                                @Html.HiddenFor(model => model.Address.Phone)
                                @Html.HiddenFor(model => model.Address.Address_ID)
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address.Address)
                                            @Html.EditorFor(model => model.Address.Address, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Address", required = "required"}})
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address.City)
                                            @Html.EditorFor(model => model.Address.City, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "City", required = "required"}})
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address.Country)
                                            @Html.EditorFor(model => model.Address.Country, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Country", required = "required"}})
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address.Zip_Code)
                                            @Html.EditorFor(model => model.Address.Zip_Code, new {htmlAttributes = new {@class = "form-control", PlaceHolder = "Zip Code", required = "required"}})
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>About Me</label>
                                            <textarea rows="5" class="form-control" placeholder="Here can be your description" value="Mike">About Me.</textarea>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-info btn-fill pull-right">Update Profile</button>
                                <div class="clearfix"></div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card card-user">
                        <div class="image">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/4a/Our_Banner_in_the_Sky_by_Frederic_Edwin_Church.jpg" alt="..."/>
                        </div>
                        <div class="content">
                            <div class="author">
                                <a href="#">
                                    <img class="avatar border-gray" src="https://static-cdn.jtvnw.net/jtv_user_pictures/panel-105458682-image-30bb3ea9145a9b30-320-320.jpeg?imenable=1&impolicy=panel-images&imwidth=320" alt="..."/>
                                    <h4 class="title">
                                        @Session["Email"]<br/>
                                        @*<small>testname</small>*@
                                    </h4>
                                </a>
                            </div>
                            <p class="description text-center">
                                Later, this will be customizable by employee
                            </p>
                            <button id="myBtn">Change Profile Image</button>

                            <!-- The Modal -->
                            <div id="myModal" class="modal">

                                <!-- Modal content -->
                                <div class="modal-content">
                                    <span class="close">&times;</span>
                                    <p>Upload a new image</p>
                                    @using (Html.BeginForm("FileUpload", "Home", FormMethod.Post, 
                                        new { enctype = "multipart/form-data" }))
                                    {  
                                        <label for="file">Upload Image:</label> 
                                        <input type="file" name="file" id="file" style="width: 100%;" /> 
                                        <input type="submit" value="Upload" class="submit" /> 
                                    }
                                </div>

                            </div>
                        </div>
                        <hr>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<footer class="footer">
    <div class="container-fluid">
        <nav class="pull-left">
            <ul>
                <li>
                    <a href="#">
                        Home
                    </a>
                </li>
                <li>
                    <a href="#">
                        Company
                    </a>
                </li>
                <li>
                    <a href="#">
                        Portfolio
                    </a>
                </li>
            </ul>
        </nav>
        <p class="copyright pull-right">
            &copy; 2017 ORA
        </p>
    </div>
</footer>
</div>
</div>

</body>
</html>
<!--   Core JS Files   -->
<script src="~/Content/assets/js/jquery-1.10.2.js"></script>
<script src="~/Content/assets/js/bootstrap.min.js"></script>
<!--  Checkbox, Radio & Switch Plugins -->
<script src="~/Content/assets/js/bootstrap-checkbox-radio-switch.js"></script>
<!--  Charts Plugin -->
<script src="~/Content/assets/js/chartist.min.js"></script>
<!--  Notifications Plugin    -->
<script src="~/Content/assets/js/bootstrap-notify.js"></script>
<!--  Google Maps Plugin    -->
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<!-- Light Bootstrap Table Core javascript and methods for Demo purpose -->
<script src="~/Content/assets/js/light-bootstrap-dashboard.js"></script>
<!-- Light Bootstrap Table DEMO methods, don't include it in your project! -->
<script src="~/Content/assets/js/demo.js"></script>


<script>
    // Get the modal
    var modal = document.getElementById('myModal');

// Get the button that opens the modal
    var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

// When the user clicks on the button, open the modal 
    btn.onclick = function() {
        modal.style.display = "block";
    }

// When the user clicks on <span> (x), close the modal
    span.onclick = function() {
        modal.style.display = "none";
    }

// When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>